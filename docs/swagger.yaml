basePath: /
definitions:
  handler.ErrorResponse:
    description: JSON-структура ответа с сообщением об ошибке.
    properties:
      message:
        type: string
    type: object
  handler.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handler.TokenResponse:
    properties:
      token:
        type: string
    type: object
  handler.UserIDResponse:
    properties:
      id:
        type: integer
    type: object
  model.Actor:
    properties:
      birth_date:
        description: Birth date of the actor
        type: string
      gender:
        description: Gender of the actor
        type: string
      id:
        description: Unique identifier for the actor
        type: integer
      name:
        description: Name of the actor
        type: string
    type: object
  model.ActorWithMovies:
    properties:
      birth_date:
        description: Birth date of the actor
        type: string
      gender:
        description: Gender of the actor
        type: string
      id:
        description: Unique identifier for the actor
        type: integer
      movies:
        description: Movies associated with the actor
        items:
          $ref: '#/definitions/model.Movie'
        type: array
      name:
        description: Name of the actor
        type: string
    type: object
  model.InputActor:
    properties:
      birth_date:
        description: Birth date of the actor
        type: string
      gender:
        description: Gender of the actor
        type: string
      movies:
        description: Movies associated with the actor
        items:
          $ref: '#/definitions/model.Movie'
        type: array
      name:
        description: Name of the actor
        type: string
    type: object
  model.InputMovie:
    properties:
      actors:
        description: Actors associated with the movie
        items:
          $ref: '#/definitions/model.Actor'
        type: array
      description:
        description: Description of the movie
        type: string
      rating:
        description: Rating of the movie
        type: integer
      release_date:
        description: Release date of the movie
        type: string
      title:
        description: Title of the movie
        type: string
    type: object
  model.Movie:
    properties:
      description:
        description: Description of the movie
        type: string
      id:
        description: Unique identifier for the movie
        type: integer
      rating:
        description: Rating of the movie
        type: integer
      release_date:
        description: Release date of the movie
        type: string
      title:
        description: Title of the movie
        type: string
    type: object
  model.MovieWithActors:
    properties:
      actors:
        description: Actors associated with the movie
        items:
          $ref: '#/definitions/model.Actor'
        type: array
      description:
        description: Description of the movie
        type: string
      id:
        description: Unique identifier for the movie
        type: integer
      rating:
        description: Rating of the movie
        type: integer
      release_date:
        description: Release date of the movie
        type: string
      title:
        description: Title of the movie
        type: string
    type: object
  model.User:
    properties:
      password:
        description: Password hash of the user
        type: string
      username:
        description: Username of the user
        type: string
    type: object
host: 127.0.0.1:8000
info:
  contact:
    url: http://www.github.com/avealice
  description: 'API для работы с фильмами и актерами в FilmHub. login: admin, password:
    kek'
  title: FilmHub API
paths:
  /api/actor:
    post:
      consumes:
      - application/json
      description: Создает нового актера.
      parameters:
      - description: Данные нового актера
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/model.InputActor'
      produces:
      - application/json
      responses:
        "201":
          description: Актер успешно создан
          schema:
            type: string
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Некорректный метод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Создать актера.
      tags:
      - /api/actor
  /api/actor/{id}:
    delete:
      description: Удаляет актера по его идентификатору.
      parameters:
      - description: Идентификатор актера
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Актер успешно удален
          schema:
            type: string
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: Некорректная роль
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Удалить актера.
      tags:
      - /api/actor/{id}
    get:
      description: Получает информацию об актере по его идентификатору.
      parameters:
      - description: Идентификатор актера
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ActorWithMovies'
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Некорректный метод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить информацию об актере.
      tags:
      - /api/actor/{id}
    put:
      consumes:
      - application/json
      description: Обновляет информацию об актере по его идентификатору.
      parameters:
      - description: Идентификатор актера
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные актера
        in: body
        name: actor
        required: true
        schema:
          $ref: '#/definitions/model.InputActor'
      produces:
      - application/json
      responses:
        "200":
          description: Информация об актере успешно обновлена
          schema:
            type: string
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: Некорректная роль
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновить информацию об актере.
      tags:
      - /api/actor/{id}
  /api/actors:
    get:
      description: Получить всех актеров из базы данных.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ActorWithMovies'
            type: array
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Некорректный метод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить всех актеров.
      tags:
      - /api/actors
  /api/movie:
    post:
      consumes:
      - application/json
      description: Создает новый фильм.
      parameters:
      - description: Данные нового фильма
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/model.InputMovie'
      produces:
      - application/json
      responses:
        "201":
          description: Фильм создан успешно
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: Некорректная роль
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Создать фильм
      tags:
      - /api/movie
  /api/movie/{id}:
    delete:
      description: Удаляет фильм по его идентификатору.
      parameters:
      - description: Идентификатор фильма
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Фильм удален успешно
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: Некорректная роль
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Некорректный метод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Удалить фильм
      tags:
      - /api/movie/{id}
    get:
      description: Получает информацию о фильме по его идентификатору.
      parameters:
      - description: Идентификатор фильма
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о фильме
          schema:
            $ref: '#/definitions/model.MovieWithActors'
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: Некорректная роль
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Некорректный метод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить информацию о фильме
      tags:
      - /api/movie/{id}
    put:
      consumes:
      - application/json
      description: Обновляет информацию о фильме.
      parameters:
      - description: Идентификатор фильма
        in: path
        name: id
        required: true
        type: integer
      - description: Новые данные о фильме
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/model.InputMovie'
      produces:
      - application/json
      responses:
        "200":
          description: Фильм обновлен успешно
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: Некорректная роль
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Некорректный метод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновить информацию о фильме
      tags:
      - /api/movie/{id}
  /api/movie/search:
    get:
      description: Выполняет поиск фильмов по указанным критериям (название или актер).
      parameters:
      - description: Название фильма для поиска
        in: query
        name: title
        type: string
      - description: Имя актера для поиска
        in: query
        name: actor
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список фильмов, удовлетворяющих критериям поиска
          schema:
            items:
              $ref: '#/definitions/model.MovieWithActors'
            type: array
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "403":
          description: Некорректная роль
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Поиск фильмов
      tags:
      - /api/movie/search
  /api/movies:
    get:
      description: Получает список всех фильмов с возможностью сортировки.
      parameters:
      - description: Критерий сортировки (title, rating, release_date)
        in: query
        name: sort_by
        type: string
      - description: Порядок сортировки (asc, desc)
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список фильмов
          schema:
            items:
              $ref: '#/definitions/model.Movie'
            type: array
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Пустой заголовок авторизации
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "405":
          description: Некорректный метод
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить все фильмы
      tags:
      - /api/movies
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя с заданными учетными данными и возвращает
        токен доступа
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: Токен доступа
          schema:
            $ref: '#/definitions/handler.TokenResponse'
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Авторизация пользователя
      tags:
      - /auth/
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя с заданными данными
      parameters:
      - description: Данные нового пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: ID нового пользователя
          schema:
            $ref: '#/definitions/handler.UserIDResponse'
        "400":
          description: Некорректный запрос или данные
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - /auth/
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
